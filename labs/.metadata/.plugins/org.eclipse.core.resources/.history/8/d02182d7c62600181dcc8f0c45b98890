package eu.ase.ktest
/*
Online IDE: https://try.kotlinlang.org
Offline IDE: Android Studio 3.x / IntelliJ IDEA or Eclipse

// 1. Kotlin Hello World

fun main(args: Array<String>) {
    println("Hello, World...!")
}
*/

import java.util.*;
import java.security.*

// here is the Cipher class
import javax.crypto.*
import javax.crypto.spec.*

class ProgMain {
	
}

class CryptoJAES
{
    fun aesCrypto(inputdata: ByteArray, key: ByteArray, mode: Int): ByteArray? 
    {
        try {
            val cipher = Cipher.getInstance("AES/ECB/NoPadding")
            val secretKeySpec = SecretKeySpec(key, "AES")
            
            if (mode == 0) {
            		cipher.init(Cipher.ENCRYPT_MODE, secretKeySpec)
            } else {
                cipher.init(Cipher.DECRYPT_MODE, secretKeySpec)
            }
            
            return cipher.doFinal(inputdata)
            
        } catch (e: Exception) {
            e.printStackTrace()
        }

        return null
    } 
}

fun main(args: Array<String>) {
    val testText = "Hey! Java/Kotlin"
	val password = "password#1234567"
    val ivs = "1234567"
    
    var c = CryptoJAES()
    var encryptTextBytes = c.aesCrypto(testText.toByteArray(), password.toByteArray(), 0)
	println("test enc...\n" + Base64.getEncoder().encodeToString(encryptTextBytes) )
	
	var decryptTextBytes = c.aesCrypto(testText.toByteArray(), password.toByteArray(), 1)
	println("test dec...\n" + decryptTextBytes?.toString(Charsets.UTF_8) )
	
}
