Linux UBUNTU:

//use ghex for introspecting the files in hex

//set env variables:
export JAVA_HOME=/opt/software/java/jdks/jdk1.8.0_161
export PATH=$JAVA_HOME/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
export CLASSPATH=.:$JAVA_HOME/jre/lib
export JSE=/home/stud/javase/lectures

cd $JSE/c11/src

A. NIO 

cd $JSE/c11/src

A.1.

javac nioexamples/CreateBuffer.java

java nioexamples/CreateBuffer


javac nioexamples/CreateArrayBuffer.java

java nioexamples/CreateArrayBuffer


javac nioexamples/ByteBufferSimpleProgMain.java

java nioexamples/ByteBufferSimpleProgMain


javac nioexamples/TypesInByteBuffer.java

java nioexamples/TypesInByteBuffer


javac nioexamples/SliceBuffer.java

java nioexamples/SliceBuffer


javac nioexamples/CopyFile.java

java nioexamples/CopyFile ./nioexamples/test.txt ./nioexamples/test_out.txt

javac nioexamples/FastCopyFile.java

java nioexamples/FastCopyFile ./nioexamples/test.txt ./nioexamples/test_fast_out.txt

javac nioexamples/ReadAndShow.java

java nioexamples/ReadAndShow

javac nioexamples/WriteSomeBytes.java

java nioexamples/WriteSomeBytes


javac nioexamples/UseMappedFile.java

java nioexamples/UseMappedFile ./nioexamples/test.txt
# //se the output file with gHex / iHex
javac nioexamples/UseCharsets.java

java nioexamples/UseCharsets


javac nioexamples/UseFileLocks.java

java nioexamples/UseFileLocks


A.2 CompletionHandlers and Async Channels
javac eu/ase/nio/ProgMainNio.java

java eu/ase/nio/ProgMainNioFileSync1

java eu/ase/nio/ProgMainNioFileAsync2

java eu/ase/nio/ProgMainNioFileAsyncCompletionHandler31

java eu/ase/nio/ProgMainNio32

# ////3.3 Async NIO - model with CompletionHandler, write + read data from a file
java eu/ase/nio/ProgMainNio

--------------------------------------------------------------------------------------------

B. RegEx

cd $JSE/c11/src

javac eu/ase/regex/RegexMatches.java

java eu/ase/regex/RegexMatches


javac eu/ase/regex/RegexMatchesStartEnd.java

java eu/ase/regex/RegexMatchesStartEnd


javac eu/ase/regex/RegexMatchesLookingAt.java

java eu/ase/regex/RegexMatchesLookingAt


javac eu/ase/regex/RegexMatchesReplace.java

java eu/ase/regex/RegexMatchesReplace


javac eu/ase/regex/RegexMatchesTail.java

java eu/ase/regex/RegexMatchesTail

--------------------------------------------------------------------------------------------

C. JDK 9 Modules and HTTP2


export JAVA_HOME=/opt/software/java/jdks/jdk-9.0.4
export PATH=$JAVA_HOME/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
export JSE=/home/stud/javase/lectures


# C.1. Modules:

# Example 1
cd $JSE/c11/java9modulesExample1

rm -rf mods
mkdir -p mods/com.me.mymodule

javac -d mods/com.me.mymodule \
           src/com.me.mymodule/module-info.java \
           src/com.me.mymodule/com/me/mymodule/Main.java

java --module-path mods -m com.me.mymodule/com.me.mymodule.Main



# Example 2

cd $JSE/c11/java9modulesExample2
rm -rf output
mkdir -p output
javac -d output com.hello/com/hello/HelloWorld.java com.hello/module-info.java 

rm -rf mlib
mkdir mlib
jar -c -f mlib/com.hello.jar -C output .


rm -rf output
javac --module-path mlib -d output com.hello.client/com/hello/client/HelloWorldClient.java com.hello.client/module-info.java

java --module-path mlib:output -m com.hello.client/com.hello.client.HelloWorldClient



# C.2. HTTP 2:

cd $JSE/c11

javac --add-modules=jdk.incubator.httpclient java9webhttp2/Http2MyDemo.java

java --add-modules=jdk.incubator.httpclient java9webhttp2/Http2MyDemo

rm java9webhttp2/Http2MyDemo.class


cd $JSE/c11/java9webhttp2

rm -rf mods
mkdir -p mods/com.http2example

javac -d mods/com.http2example --add-modules=jdk.incubator.httpclient src/com.http2example/module-info.java src/com.http2example/com/http2example/Http2Demo.java

java --module-path mods --add-modules=jdk.incubator.httpclient -m com.http2example/com.http2example.Http2Demo




--------------------------------------------------------------------------------------------

Resources for NIO:
The Workspace for Java SE 7/8 API Draft of JC NIO 3.1 in:
/Users/ctoma/Workspaces/EclipseProjects/javase

http://tutorials.jenkov.com/java-nio/nio-vs-io.html
https://www.ibm.com/developerworks/java/tutorials/j-nio/j-nio.html

https://examples.javacodegeeks.com/core-java/nio/channels/completionhandler/java-nio-channels-completionhandler-example/

http://www.java2s.com/Tutorials/Java/Java_io/1050__Java_nio_Asynchronous.htm

http://rox-xmlrpc.sourceforge.net/niotut/
https://dzone.com/articles/java-nio-vs-io

